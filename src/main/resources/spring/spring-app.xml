<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <import resource="spring-security.xml"/>

    <tx:annotation-driven/>

    <context:component-scan base-package="su.vfe.**.service"/>
    <context:component-scan base-package="su.vfe.**.repo"/>
    <context:component-scan base-package="su.vfe.**.security"/>
    <jpa:repositories base-package="su.vfe.**.repo"/>

    <jdbc:initialize-database data-source="dataSource" enabled="${database.init}">
        <jdbc:script location="classpath:${jdbc.initLocation}"/>
        <jdbc:script encoding="utf-8" location="classpath:${jdbc.populateLocation}"/>
    </jdbc:initialize-database>

    <beans profile="hsqldb">
        <context:property-placeholder location="classpath:db/hsqldb.properties" system-properties-mode="OVERRIDE"/>

        <bean id="dataSource"
              class="org.springframework.jdbc.datasource.DriverManagerDataSource"
              p:driverClassName="org.postgresql.Driver"
              p:url="${database.url}"
              p:username="${database.username}"
              p:password="${database.password}"/>
    </beans>

    <beans profile="postgresql">
        <context:property-placeholder location="classpath:db/postgresql.properties" system-properties-mode="OVERRIDE"/>

        <bean id="dataSource"
              class="org.apache.tomcat.jdbc.pool.DataSource"
              p:driverClassName="org.postgresql.Driver"
              p:url="${database.url}"
              p:username="${database.username}"
              p:password="${database.password}"/>
    </beans>

    <beans profile="heroku">
        <context:property-placeholder location="classpath:/db/heroku.properties" system-properties-mode="OVERRIDE"/>

        <bean class="java.net.URI" id="dbUrl">
            <constructor-arg value="${DATABASE_URL}"/>
        </bean>

        <bean id="dataSource"
            class="org.apache.tomcat.jdbc.pool.DataSource"
            p:url="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + @dbUrl.getPath() }"
            p:username="#{ @dbUrl.getUserInfo().split(':')[0] }"
            p:password="#{ @dbUrl.getUserInfo().split(':')[1] }"
            p:driverClassName="org.postgresql.Driver"
            p:validationQuery="SELECT 1"
            p:maxActive="10"
            p:minIdle="2"
            p:maxWait="20000"
            p:initialSize="2"
            p:maxIdle="5"
            p:testOnBorrow="true"
            p:removeAbandoned="true"
            p:testOnConnect="true"
            p:testWhileIdle="true"/>
    </beans>

    <beans profile="jpa">
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
              p:dataSource-ref="dataSource"
              p:packagesToScan="su.vfe.**.model">

            <property name="jpaPropertyMap">
                <map>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="${hibernate.format_sql}"/>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}" value="${hibernate.use_sql_comments}"/>
                </map>
            </property>

            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                      p:showSql="${jpa.showSql}">
                </bean>
            </property>
        </bean>

        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
              p:entityManagerFactory-ref="entityManagerFactory"/>
    </beans>
</beans>